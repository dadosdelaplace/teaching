devtools::install_github("gadenbuie/xaringanthemer")
? style_mono_accent
? xaringanthemer::style_mono_accent
? xaringanExtra::use_extra_styles
? xaringanExtra::use_freezeframe
? xaringanthemer::style_duo_accent
? xaringanthemer::choose_dark_or_light
lubridate::now()
lubridate::today()
lubridate::dmy(lubridate::today())
? lubridate::today
? lubridate::dmy
format(lubridate::today(), format = "%d-%m-%Y")
? xaringanExtra::use_progress_bar
devtools::install_github("gadenbuie/xaringanExtra")
devtools::install_github("gadenbuie/xaringanExtra")
devtools::install_github("gadenbuie/xaringanExtra")
devtools::install_github("gadenbuie/xaringanExtra")
library(xaringanExtra)
remove.packages("xaringanExtra", lib="~/Library/R/3.6/library")
devtools::install_github("gadenbuie/xaringanExtra")
devtools::install_github("gadenbuie/xaringanExtra")
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
remove.packages("xaringanExtra", lib="~/Library/R/3.6/library")
devtools::install_github("gadenbuie/xaringanExtra")
? xaringanExtra
remove.packages("xaringanExtra", lib="~/Library/R/3.6/library")
install.packages("xaringanExtra")
library(xaringanExtra)
remove.packages("xaringanExtra", lib="~/Library/R/3.6/library")
devtools::install_github("gadenbuie/xaringanExtra")
? use_banner
.rs.restartR()
? use_banner
? use_banner
? style_duo_accent
? xaringanthemer::style_duo_accent
xaringanthemer::xaringanthemer_font_default("text_font_weight")
? xaringanthemer::google_font
xaringanthemer::xaringanthemer_font_default("text_font_url")
a
x
# .purple[Material] de las clases
ncol(1:6)
a
### [Primer paquete y primera función](#primer-paquete)
### [Vectores: numéricos y de caracteres](#vectores)
210 + 810/3 + 100
600 + 130 + 40 + 40 + 200
600 + 130 + 40 + 40 + 200
1650 - 300
1150
200 - 1100
1500 + 1900
3800 * 0.85
3800 * 0.85 + 1650 - 1300 + (2000 * 0.85)
3800 * 0.85 + 1650 - 1300 + (2000 * 0.85) + 3900
3800 * 0.85 + 1650 - 1300 + (2000 * 0.85) + 3900 - 720
3800 * 0.85 + 1650 - 1300 + (2000 * 0.85) + 3900
1100 - 300
3800 * 0.85
55 * 0.45
45 * 0.45
5 * 0.55
4 * 0.55
3 * 0.55
c(5, 4, 3 * 0.55
)
c(5, 4, 3) * 0.55
5 - c(5, 4, 3) * 0.55
5 - c(5, 4, 3) * 0.55
7 * 0.3*0.45 + 7*0.28*0.45
70 * 0.3*0.45 + 7*0.28*0.45
70 * 0.3*0.45*0.25 + 7*0.28*0.45*0.25 + 7*0.45*0.45*0.2
70 * 0.3*0.45*0.25 + 70*0.28*0.45*0.25 + 70*0.45*0.45*0.2
80 * 0.3*0.45*0.25 + 80*0.28*0.45*0.25 + 80*0.45*0.45*0.2
90 * 0.3*0.45*0.25 + 90*0.28*0.45*0.25 + 90*0.45*0.45*0.2
3.35 / 4.5
100 * 0.3*0.45*0.25 + 100*0.28*0.45*0.25 + 100*0.45*0.45*0.2
100 * 0.3* + 100*0.28
100 * 0.3 + 100*0.28
39.76 / (0.28 + 0.14)
(0.14 * 0.28)*0.45*0.25 + (0.2 + 0.35) * 0.45 * 0.2
(0.14 * 0.28)*0.55 + (0.2 + 0.35) * 0.45
(0.14 + 0.28)*0.55 + (0.2 + 0.35) * 0.45
(0.14 + 0.28)*0.55 + (0.2 + 0.35) * 0.45
0.4785 * 0.45
15 / 47.85
33 / 47.85
5 * 140 + 4 * 70
980 * 0.15
980 * 0.85 * (2000 * 0.85)
980 * 0.85 + (2000 * 0.85)
980 * 0.85 + (2000 * 0.85)
980 * 0.85 + (2000 * 0.85) + 1600
library(tidyverse)
datos <-
tibble("x" = c(6, 7, 8, 4, 6, 7, 7, 5, 6, 4, 8, 11, 3,
6, 7, 4, 3, 5, 5, 4, 2, 3, 3, 3, 4, 5, 8,
6, 4, 8, 5, 5, 5, 4, 2, 5, 3, 4, 4, 8, 6,
7, 5, 5, 5, 5, 2, 11, 10, 8, 4, 8, 3, 4,
7, 2, 4, 6, 9, 10))
datos
tabla_frec <-
datos %>% count(x)
tabla_frec
tabla_frec <-
tabla_frec %>%
mutate(N = cumsum(n),
frec_rel = n / sum(n),
frec_rel_abs = cumsum(frec_rel))
tabla_frec
tabla_frec <-
tabla_frec %>%
mutate(N = cumsum(n), frec_f = n / sum(n), frec_F = cumsum(frec_f),
f_x = frec_rel * x, f_x2 = frec_rel * x^2)
tabla_frec
datos %>%
drop_na(x) %>% # por si acaso
summarise(media = mean(x), mediana = median(x),
moda = n_distinct(x))
datos %>%
drop_na(x) %>% # por si acaso
summarise(media = mean(x), mediana = median(x),
moda = max(count(x)))
datos %>%
drop_na(x) %>% # por si acaso
summarise(media = mean(x), mediana = median(x),
moda = max(n(x)))
n_distinct()
? n_distinct
datos %>%
drop_na(x) %>% # por si acaso
summarise(media = mean(x), mediana = median(x),
moda = which.max(table(x)))
table(x)
table(datos$x)
tabulate(datos$x)
which.max(tabulate(datos$x))
tabla_freq
tabla_frec
tabla_frec %>%
slice_max(n, with_ties = TRUE)
tabla_frec %>%
slice_max(n, with_ties = TRUE) %>%
pull(x)
datos %>%
drop_na(x) %>% # por si acaso
summarise(cuasi_var = var(x), cuasi_sd = sd(x), CV = sd / mean(x))
datos %>%
drop_na(x) %>% # por si acaso
summarise(var = var(x), sd = sd(x), CV = sd / mean(x))
datos %>%
drop_na(x) %>% # por si acaso
summarise(cuasi_var = var(x), cuasi_sd = sd(x), CV = cuasi_sd / mean(x))
datos %>%
drop_na(x) %>% # por si acaso
summarise(cuasi_var = var(x), cuasi_sd = sd(x), cuasi_CV = cuasi_sd / mean(x))
ttabla_frec
tabla_frec
tabla_frec %>%
group_by(x >= 7) %>%
count() %>%
ungroup()
datos %>%
group_by(x <= 7) %>%
count() %>%
ungroup()
mutate(porc = 100 * n/sum(n))
datos %>%
group_by(x <= 7) %>%
count() %>%
ungroup() %>%
mutate(porc = 100 * n/sum(n))
datos %>%
group_by(x <= 7) %>%
count() %>%
ungroup()
datos %>%
group_by(x <= 7) %>% count() %>% ungroup() %>%
mutate(porc = 100*n / sum(n))
datos %>%
drop_na(x) %>% # por si acaso
summarise(mediana = median(x),
percentiles = quantile(x, probs = c(0.15, 0.27, 0.61, 0.93)),
cuartiles = quantile(x))
datos %>%
drop_na(x) %>% # por si acaso
summarise(mediana = median(x),
p15 = quantile(x, probs = 0.15), p27 = quantile(x, probs = 0.27),
p61 = quantile(x, probs = 0.61), p93 = quantile(x, probs = 0.93),
cuartiles = quantile(x))
datos %>%
drop_na(x) %>% # por si acaso
summarise(mediana = median(x),
p15 = quantile(x, probs = 0.15), p27 = quantile(x, probs = 0.27),
p61 = quantile(x, probs = 0.61), p93 = quantile(x, probs = 0.93),
cuartiles = quantile(x))
datos
datos %>%
drop_na(x) %>% # por si acaso
summarise(mediana = median(x))
datos %>%
drop_na(x) %>% # por si acaso
summarise(mediana = median(x),
p15 = quantile(x, probs = 0.15))
datos %>%
drop_na(x) %>% # por si acaso
summarise(mediana = median(x),
p15 = quantile(x, probs = 0.15), p27 = quantile(x, probs = 0.27),
p61 = quantile(x, probs = 0.61), p93 = quantile(x, probs = 0.93),
q0 = quantile(x, probs = 0), q1 = quantile(x, probs = 0.25), q2 = quantile(x, probs = 0.5),
q3 = quantile(x, probs = 0.75), q4 = quantile(x, probs = 1))
650 / 14
650.16 / 14
25240.18 + 650.16*2
26540.5 * 0.8
(26540.5 * 0.8) / 14
(26540.5 * 0.85) / 14
((25240.18 + 650.16*2) * 0.8) / 14
((25240.18 + 650.16*2) * 0.85) / 14
((25240.18 + 650.16*2) * 0.9) / 14
((25240.18 + 650.16*2) * 0.87) / 14
((25240.18 + 650.16*2) * 0.88) / 14
(25240.18 * 0.8 + 650.16*2) / 14
(25240.18 * 0.85 + 650.16*2) / 14
(25240.18 * 0.87 + 650.16*2) / 14
(25240.18 * 0.88 + 650.16*2) / 14
(25240.18 * 0.89 + 650.16*2) / 14
(25240.18 + 650.16*2)* 0.89 / 14
((25240.18 + 650.16*2)* 0.89) / 14
((25240.18 + 650.16*2)* 0.9) / 14
((25240.18 + 650.16*2)* 0.895) / 14
((25240.18 + 650.16*3)* 0.89) / 14
((25240.18 + 650.16*3)* 0.85) / 14
((25240.18 + 650.16*2)* 0.85) / 14
((25240.18 + 650.16*2)* 0.88) / 14
((25240.18 + 650.16*2)* 0.87) / 14
(140*5 + 70*4) * 0.85
((32000 + 650.16*3)* 0.8) / 14
((32000 + 650.16*3)* 0.75) / 14
library(tidyverse)
datos <-
tibble(x = c(174, 185, 166, 176, 145, 167, 191, 174, 159,
155, 181, 160, 170, 198, 180, 150, 161, 183,
172, 163, 147, 176, 141, 170, 171, 158, 184,
173, 169, 162, 172, 181, 187, 177, 164, 171,
193, 183, 173, 179, 167, 178, 180, 168, 173))
datos
datos %>%
group_by(x > 180) %>%
count()
datos %>%
group_by(x > 180) %>%
count() %>%
ungroup() %>%
mutate(porc = 100 * n / sum(n))
datos <- tibble(x = c(16.0, 17.2, 18.0, 17.2, 16.9, 17.1,
18.2, 17.3, 17.5, 16.6),
y = c(58, 82, 81, 65, 61, 48, 61, 43, 33, 36))
datos
datos %>%
grouo_by(y > 60) %>%
summarise(medias = mean(x)) %>%
ungroup()
datos %>%
group_by(y > 60) %>%
summarise(medias = mean(x)) %>%
ungroup()
mtcars
library(tidyverse)
datos <-
tibble("x" = c(20, 16, 34, 23, 27, 32, 18, 22, 25, 51,
40, 15, 23, 31, 37, 41, 26),
"y" = c(6.5, 6, 8.5, 7, 9, 9.5, 7.5, 8, 7.2, 9.1,
10, 4, 7.1, 8.2, 8.7, 9.9, 9.3))
datos
datos %>%
summarise(mean_x = mean(x), mean_y = mean(y),
median_x = median(x), median_y = median(y),
var_x = mean(x^2) - mean(x)^2,
var_y = mean(y^2) - mean(y)^2,
cov = cov(x, y), cor = cor(x, y))
datos %>%
summarise(mean_x = mean(x), mean_y = mean(y),
median_x = median(x), median_y = median(y),
var_x = mean(x^2) - mean(x)^2, var_y = mean(y^2) - mean(y)^2,
cv_x = sqrt(var_x) / abs(mean_x), cv_y = sqrt(var_y) / abs(mean_y)
cov = cov(x, y), cor = cor(x, y))
datos %>%
summarise(mean_x = mean(x), mean_y = mean(y),
median_x = median(x), median_y = median(y),
var_x = mean(x^2) - mean(x)^2, var_y = mean(y^2) - mean(y)^2,
cv_x = sqrt(var_x) / abs(mean_x), cv_y = sqrt(var_y) / abs(mean_y),
cov = cov(x, y), cor = cor(x, y))
starwars %>%
select(where(is.numeric)) %>%
cor()
starwars %>%
drop_na(where(is.numeric)) %>%
select(where(is.numeric)) %>%
cor()
starwars %>%
select(where(is.numeric))
drop_na() %>%
cor()
starwars %>%
select(where(is.numeric)) %>%
drop_na() %>%
cor()
fitted.values()
reg_lineal <- lm(data = datos, formula = y ~ x)
reg_lineal %>% fitted.values()
reg_linel %>% residuals()
reg_lineal %>% residuals()
reg_lineal %>% residuals()
datos <-
datos %>%
mutate(estim = reg_lineal %>% fitted.values(),
error = y - estim)
datos
datos %>%
summarise(mean_res = mean(error),
SST = sum(y^2),
SSE = sum(estim^2),
SSR = sum(error^2), var_res = mean(error^2))
datos %>%
summarise(mean_res = mean(error),
SST = sum(y^2),
SSE = sum(estim^2),
SSR = sum(error^2), var_res = mean(error^2),
R2 = 1 - SSR / SST)
0.77^2
datos %>%
summarise(mean_res = mean(error),
SST = sum(y^2), SSE = sum(estim^2),
SSR = sum(error^2), var_res = mean(error^2),
cor = cor(x, y), R2 = 1 - SSR / SST)
0.77119^2
datos
cor(datos$x, datos$y)
cor(datos$x, datos$y)^2
datos %>%
summarise(mean_res = mean(error),
SST = sum((y - mean(y))^2), SSE = sum(estim^2),
SSR = sum(error^2), var_res = mean(error^2),
cor = cor(x, y), R2 = 1 - SSR / SST)
reg_lineal %>% coef()
datos
reg_lineal %>% predict(tibble(x = c(25, 17, 38, 50, 100)))
reg_lineal %>% predict(tibble(x = c(25, 17, 38, 43, 100)))
